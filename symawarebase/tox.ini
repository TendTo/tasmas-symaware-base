# Global tox configuration
[tox]
requires = tox>=4 # Minimum version of tox required
envlist = py{39,310,311,312}-{test,lint} # Default test environments
isolated_build = True # Isolate each tox environment from the others

# Default environment configuration
[testenv]
passenv =
    SETUPTOOLS_*
setenv =
    PIP_EXTRA_INDEX_URL = https://gitlab.mpi-sws.org/api/v4/projects/2668/packages/pypi/simple

# Testing environment that supports python 3.9+
[testenv:py{,39,310,311,312}-test]
description = Invoke pytest to run automated tests
setenv =
    TOXINIDIR = {toxinidir} # Project root
    PIP_EXTRA_INDEX_URL = https://gitlab.mpi-sws.org/api/v4/projects/2668/packages/pypi/simple
passenv = # Environment variables to pass to the testing environment
    HOME
    SETUPTOOLS_*
extras = test # Optional dependencies (see pyproject.toml)
commands = # Commands to execute
    pytest {posargs}

# Linting environment that supports python 3.9+
[testenv:py{,39,310,311,312}-lint]
description = Perform static analysis and style checks
extras = # Optional dependencies (see pyproject.toml)
    lint
    test
setenv = # Environment variables to pass to the linting environment
    PATHS = {toxinidir}/src {toxinidir}/tests
    PIP_EXTRA_INDEX_URL = https://gitlab.mpi-sws.org/api/v4/projects/2668/packages/pypi/simple
commands = # Commands to execute
    black --check {posargs:{env:PATHS}}
    pylint {posargs:{env:PATHS}}
    mypy {posargs:{toxinidir}/src}
    isort --check-only --diff {posargs:{env:PATHS}}

# Try to automatically fix style issues
[testenv:fixlint]
description = Fix style issues
extras = # Optional dependencies (see pyproject.toml)
    lint
setenv = # Environment variables to pass to the linting environment
    PATHS = {toxinidir}/src {toxinidir}/tests
    PIP_EXTRA_INDEX_URL = https://gitlab.mpi-sws.org/api/v4/projects/2668/packages/pypi/simple
commands = # Commands to execute
    black {posargs:{env:PATHS}}
    isort {posargs:{env:PATHS}}

# Package building and cleaning environments
[testenv:{build,clean}]
description =
    build: Build the package in isolation according to PEP517, see https://github.com/pypa/build
    clean: Remove old distribution files and temporary build artifacts (./build and ./dist)
skip_install = True # Do not install the package, just build it
changedir = {toxinidir} # Working directory
deps = # Build dependencies
    build: build[virtualenv]
commands =
    clean: python -c 'import shutil; [shutil.rmtree(p, True) for p in ("build", "dist", "docs/_build", ".coverage", ".pytest_cache", ".mypy_cache", "htmlcov")]'
    clean: python -c 'import pathlib, shutil; [shutil.rmtree(p, True) for p in pathlib.Path("src").glob("*.egg-info")]'
    build: python -m build {posargs}

# Test and build documentation environments
[testenv:{docs,doctests,linkcheck}]
description =
    docs: Invoke sphinx-build to build the docs
    doctests: Invoke sphinx-build to run doctests
    linkcheck: Check for broken links in the documentation
setenv = # Environment variables to pass to the documentation environment
    DOCSDIR = {toxinidir}/docs
    BUILDDIR = {toxinidir}/docs/_build
    SPHINX_APIDOC_OPTIONS = members,show-inheritance
    PIP_EXTRA_INDEX_URL = https://gitlab.mpi-sws.org/api/v4/projects/2668/packages/pypi/simple
    docs: BUILD = html
    doctests: BUILD = doctest
    linkcheck: BUILD = linkcheck
extras = # Optional dependencies (see pyproject.toml)
    simulators
deps =
    -r {toxinidir}/docs/requirements.txt
commands = # Call sphinx-build to build the docs or test them
    sphinx-build --color -b {env:BUILD} -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}" "{env:BUILDDIR}/{env:BUILD}" {posargs}

# Publish the package you have been developing to a package index server
[testenv:publish]
description =
    Publish the package you have been developing to a package index server.
    By default, it uses testpypi. If you really want to publish your package
    to be publicly accessible in PyPI, use the `-- --repository pypi` option.
skip_install = True
changedir = {toxinidir}
passenv = # Environment variables used by twine (https://twine.readthedocs.io/en/latest/)
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY
    TWINE_REPOSITORY_URL
deps = twine # Install twine
commands = # Commands to execute to publish the package. uses 'testpypi' by default
    python -m twine check dist/*
    python -m twine upload {posargs:--repository {env:TWINE_REPOSITORY:testpypi}} dist/*
