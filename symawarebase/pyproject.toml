[build-system]
requires = ["setuptools>=46.1.0", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

# Metadata of the project
[project]
name = "symaware-base"
description = "SymAware Base module"
readme = "README.md"
requires-python = ">=3.9"
license.file = "LICENSE"
authors = [
    { name = "Arabinda Ghosh", email = "arabinda@mpi-sws.org" },
    { name = "Sadegh Soudjani", email = "sadegh@mpi-sws.org" },
    { name = "Gregorio Marchesini", email = "gremar@kth.se" },
    { name = "Zengjie Zhang", email = "z.zhang3@tue.nl" },
    { name = "Ernesto Casablanca", email = "casablancaernesto@gmail.com" },
]
maintainers = [
    { name = "Arabinda Ghosh", email = "arabinda@mpi-sws.org" },
    { name = "Gregorio Marchesini", email = "gremar@kth.se" },
    { name = "Zengjie Zhang", email = "z.zhang3@tue.nl" },
    { name = "Ernesto Casablanca", email = "casablancaernesto@gmail.com" },
]
keywords = [
    "python",
    "autonomous agents",
    "situational awareness",
    "multi-agent systems",
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Framework :: tox",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Human Machine Interfaces",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Typing :: Typed",
]
dependencies = ["numpy"]
dynamic = ['version']

# URLs of the project
[project.urls]
Homepage = "https://www.symaware.eu/"
Documentation = "https://sadegh.pages.mpi-sws.org/eicsymaware/"
Repository = "https://gitlab.mpi-sws.org/sadegh/eicsymaware"
Changelog = "https://gitlab.mpi-sws.org/sadegh/eicsymaware/blob/main/CHANGELOG.md"

# All the optional dependencies of the project
# Can be installed with `pip install symaware-base[dependency]`
# e.g. `pip install symaware-base[test]`
[project.optional-dependencies]
test = ["pytest", "pytest-cov", "pytest-mock", "pytest-asyncio"]
lint = ["pylint", "black", "isort", "mypy", "types-PyYAML"]
simulators = ["symaware-pybullet", "symaware-pymunk"]

# Alternative entry points for package utilities
# [project.scripts]
# script = ".base.system:main"

# Setuptool configuration (build system)
[tool.setuptools.packages.find]
where = ["src"]

# Include external non-python file in the package
[tool.setuptools.package-data]
"*" = ["py.typed", "config/*.yaml"]

# Automatic versioning based on git tags
[tool.setuptools_scm]
version_file = "src/symaware/base/_version.py"
fallback_version = "0.0.0"

# Pytest configuration (test runner)
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--cov=symaware.base",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=50",
    "--verbose",
]
testpaths = ["tests"]

# Coverage configuration (test coverage)
[tool.coverage.run]
omit = ["*/__main__.py", "*/_version.py"] # omit files from coverage

# Black configuration (code formatter)
[tool.black]
target-version = ['py39', 'py310', 'py311', 'py312']
line-length = 120
include = '(src|tests)\/.*\.py'

# Isort configuration (import sorter)
[tool.isort]
profile = "black"

# mypy configuration (static type checker)
[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
namespace_packages = true
explicit_package_bases = true
mypy_path = "src"
